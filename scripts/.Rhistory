geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.045, ymin = red - 0.045),
width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 2) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9)) +
scale_x_continuous(breaks = 0:6) +
labs(x = 'Time after injection (hours)',
y = 'Social Disconnection')
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.025, ymin = red - 0.025),
width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 2) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9)) +
scale_x_continuous(breaks = 0:6) +
labs(x = 'Time after injection (hours)',
y = 'Social Disconnection')
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.0375, ymin = red - 0.025),
width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 2) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9)) +
scale_x_continuous(breaks = 0:6) +
labs(x = 'Time after injection (hours)',
y = 'Social Disconnection')
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.0375, ymin = red - 0.0375),
width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 2) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9)) +
scale_x_continuous(breaks = 0:6) +
labs(x = 'Time after injection (hours)',
y = 'Social Disconnection')
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.0375, ymin = red - 0.0375),
width = .2, alpha = .5) +
annotate(geom = 'text', label = '*', x = c(2,3,4), y = data[c(3,4,5), 'red'])
data[c(3,4,5), 'red']
as.numeric(data[c(3,4,5), 'red'])
unlist(data[c(3,4,5), 'red'])
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.0375, ymin = red - 0.0375),
width = .2, alpha = .5) +
annotate(geom = 'text', label = '*', x = c(2,3,4), y = unlist(data[c(3,4,5), 'red']))
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.0375, ymin = red - 0.0375),
width = .2, alpha = .5) +
annotate(geom = 'text', label = '*', x = c(2,3,4), y = 1.05*unlist(data[c(3,4,5), 'red']))
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.0375, ymin = red - 0.0375),
width = .2, alpha = .5) +
annotate(geom = 'text', label = '*', x = c(2,3,4), y = 1.05*unlist(data[c(3,4,5), 'red']))
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.0375, ymin = red - 0.0375),
width = .2, alpha = .5) +
annotate(geom = 'text', x = c(2,3,4), y = 1.05*unlist(data[c(3,4,5), 'red']),
label = '*', color = 'red', size = 4) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 2) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9)) +
scale_x_continuous(breaks = 0:6) +
labs(x = 'Time after injection (hours)',
y = 'Social Disconnection')
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.0375, ymin = red - 0.0375),
width = .2, alpha = .5) +
annotate(geom = 'text', x = c(2,3,4), y = 1.05*unlist(data[c(3,4,5), 'red']),
label = '*', color = 'red', size = 10) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 2) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9)) +
scale_x_continuous(breaks = 0:6) +
labs(x = 'Time after injection (hours)',
y = 'Social Disconnection')
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.0375, ymin = red - 0.0375),
width = .2, alpha = .5) +
annotate(geom = 'text', x = c(2,3,4), y = 1.05*unlist(data[c(3,4,5), 'red']),
label = '*', color = 'red', size = 7) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 2) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9)) +
scale_x_continuous(breaks = 0:6) +
labs(x = 'Time after injection (hours)',
y = 'Social Disconnection')
source('~/.active-rstudio-document', echo=TRUE)
library(dplyr)
library(ggplot2)
setwd("~/Documents/covid-r-plots/scripts")
df_sub = readRDS('../RDS-data/covid-cases-timenorm-small.RDS')
days0_sub = readRDS('../RDS-data/covid-day0-small.RDS')
metadata = file.info('../RDS-data/covid-cases-timenorm-small.RDS')
thresh_pat = 100
View(df_sub)
# Spain epidemic curve
df_sub %>%
filter(loc == "Spain") %>%
ggplot(., aes(x = timenorm_num)) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7, color = 'black', size = 0.25) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top')
cols = c('Active' = '#E08B00', 'Recovered-cumul' = '#7CAE00', 'Died-cumul' = 'red', 'Total-cumul' = 'darkgrey')
# Spain epidemic curve
df_sub %>%
filter(loc == "Spain") %>%
ggplot(., aes(x = timenorm_num)) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7, color = 'black', size = 0.25) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top')
# Spain epidemic curve
df_sub %>%
filter(loc == "Spain") %>%
ggplot(., aes(x = timenorm_num)) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
#geom_col(aes(y = active, fill = 'Active'), alpha = .7, color = 'black', size = 0.25) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7, size = 0.25) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top')
# Spain epidemic curve
df_sub %>%
filter(loc == "Spain") %>%
ggplot(., aes(x = timenorm_num)) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
#geom_col(aes(y = active, fill = 'Active'), alpha = .7, color = 'black', size = 0.25) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7) +
geom_line(aes(y = active), col = 'black', lwd = .2) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top')
# Spain epidemic curve
df_sub %>%
filter(loc == "Spain") %>%
ggplot(., aes(x = timenorm_num)) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
#geom_col(aes(y = active, fill = 'Active'), alpha = .7, color = 'black', size = 0.25) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7) +
geom_line(aes(y = active), col = 'black', lwd = .5) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top')
View(df_sub)
# Spain epidemic curve
df_sub %>%
filter(loc == "Spain", time_base >= (Sys.Date() - 10)) %>%
ggplot(., aes(x = timenorm_num)) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
#geom_col(aes(y = active, fill = 'Active'), alpha = .7, color = 'black', size = 0.25) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7) +
geom_line(aes(y = active), col = 'black', lwd = .5) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top')
# Spain epidemic curve
df_sub %>%
filter(loc == "Spain", time_base >= (Sys.Date() - 30)) %>%
ggplot(., aes(x = timenorm_num)) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
#geom_col(aes(y = active, fill = 'Active'), alpha = .7, color = 'black', size = 0.25) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7) +
geom_line(aes(y = active), col = 'black', lwd = .5) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top')
# Spain epidemic curve
df_sub %>%
filter(loc == "Spain", time_base >= (Sys.Date() - 30)) %>%
ggplot(., aes(x = time_base)) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
#geom_col(aes(y = active, fill = 'Active'), alpha = .7, color = 'black', size = 0.25) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7) +
geom_line(aes(y = active), col = 'black', lwd = .5) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top')
# Spain epidemic curve
df_sub %>%
filter(loc == "Spain", time_base >= (Sys.Date() - 30)) %>%
ggplot(., aes(x = time_base)) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
#geom_col(aes(y = active, fill = 'Active'), alpha = .7, color = 'black', size = 0.25) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7) +
geom_line(aes(y = active), col = 'black', lwd = .5) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top', axis.text.x = element_text(angle=45))
# Spain epidemic curve
df_sub %>%
filter(loc == "Italy", time_base >= (Sys.Date() - 30)) %>%
ggplot(., aes(x = time_base)) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
#geom_col(aes(y = active, fill = 'Active'), alpha = .7, color = 'black', size = 0.25) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7) +
geom_line(aes(y = active), col = 'black', lwd = .5) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45))
# Spain epidemic curve
df_sub %>%
filter(loc == "Italy", time_base >= (Sys.Date() - 30)) %>%
ggplot(., aes(x = time_base)) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
#geom_col(aes(y = active, fill = 'Active'), alpha = .7, color = 'black', size = 0.25) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
geom_line(aes(y = active), col = 'black', lwd = .5) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45))
# Spain epidemic curve
df_sub %>%
#filter(loc == "Italy", time_base >= (Sys.Date() - 30)) %>%
filter(loc == "Italy") %>%
ggplot(., aes(x = time_base)) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
#geom_col(aes(y = active, fill = 'Active'), alpha = .7, color = 'black', size = 0.25) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
geom_line(aes(y = active), col = 'black', lwd = .5) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45))
# Spain epidemic curve
df_sub %>%
#filter(loc == "Italy", time_base >= (Sys.Date() - 30)) %>%
filter(loc == "Spain") %>%
ggplot(., aes(x = time_base)) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
#geom_col(aes(y = active, fill = 'Active'), alpha = .7, color = 'black', size = 0.25) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
geom_line(aes(y = active), col = 'black', lwd = .5) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45))
# Spain epidemic curve
df_sub %>%
#filter(loc == "Italy", time_base >= (Sys.Date() - 30)) %>%
filter(loc == "Spain", timenorm_num >= 1) %>%
ggplot(., aes(x = time_base)) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
#geom_col(aes(y = active, fill = 'Active'), alpha = .7, color = 'black', size = 0.25) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
geom_line(aes(y = active), col = 'black', lwd = .5) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45))
# Spain epidemic curve
df_sub %>%
#filter(loc == "Italy", time_base >= (Sys.Date() - 30)) %>%
filter(loc == "United Kingdom", timenorm_num >= 1) %>%
ggplot(., aes(x = time_base)) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
#geom_col(aes(y = active, fill = 'Active'), alpha = .7, color = 'black', size = 0.25) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
geom_line(aes(y = active), col = 'black', lwd = .5) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45))
View(df_sub)
unique(df_sub$loc)
# Spain epidemic curve
df_sub %>%
#filter(loc == "Italy", time_base >= (Sys.Date() - 30)) %>%
filter(loc == "United Kingdom_global", timenorm_num >= 1) %>%
ggplot(., aes(x = time_base)) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
#geom_col(aes(y = active, fill = 'Active'), alpha = .7, color = 'black', size = 0.25) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
geom_line(aes(y = active), col = 'black', lwd = .5) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45))
# UK epidemic curve
df_sub %>%
filter(loc == "United Kingdom_global") %>%
mutate('active' = c(NA, diff(active))) %>%
ggplot(., aes(x = timenorm_num)) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7, col = 'black', lwd = .15) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top')
# UK epidemic curve
df_sub %>%
filter(loc == "United Kingdom_global") %>%
mutate('new' = c(NA, diff(active))) %>%
ggplot(., aes(x = timenorm_num)) +
geom_col(aes(y = new, fill = 'Active'), alpha = .7, col = 'black', lwd = .15) +
#geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
#geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top')
# New detected cases
df_sub %>%
#filter(loc == "United Kingdom_global") %>%
filter(loc == "Spain") %>%
mutate('new' = c(NA, diff(conf))) %>%
ggplot(., aes(x = timenorm_num)) +
geom_col(aes(y = new, fill = 'Active'), alpha = .7, col = 'black', lwd = .15) +
#geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
#geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top')
plot(df_sub %>% filter(loc == "Spain") %>% select(conf) %>% unlist())
plot(df_sub %>% filter(loc == "Spain") %>% select(conf) %>% unlist(), type = 'l')
# Spain epidemic curve
df_sub %>%
#filter(loc == "Italy", time_base >= (Sys.Date() - 30)) %>%
filter(loc == "United Kingdom_global", timenorm_num >= 1) %>%
ggplot(., aes(x = time_base)) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
#geom_col(aes(y = active, fill = 'Active'), alpha = .7, color = 'black', size = 0.25) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
geom_line(aes(y = active), col = 'black', lwd = .5) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45))
# Spain epidemic curve
df_sub %>%
#filter(loc == "Italy", time_base >= (Sys.Date() - 30)) %>%
filter(loc == "Spain", timenorm_num >= 1) %>%
ggplot(., aes(x = time_base)) +
geom_col(aes(y = recov, fill = 'Recovered-cumul'), alpha = .7) +
#geom_col(aes(y = active, fill = 'Active'), alpha = .7, color = 'black', size = 0.25) +
geom_col(aes(y = active, fill = 'Active'), alpha = .7) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
geom_line(aes(y = active), col = 'black', lwd = .5) +
scale_fill_manual(name="Legend",values=cols) +
labs(y = "", x = paste0('Days after detection of ', thresh_pat, 'th case')) +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45))
#only_numeric_caned <- readRDS("~/GitHub/2020-project-04-group-05/2020-project-04-group-05/Git version 2/Rds/only_numeric_caned.rds")
only_numeric_caned <- readRDS("~/Documents/Uni/Tutorium/2020-project-04-group-05/Rds/only_numeric_caned.rds")
matrix_only_numeric_caned<- apply(only_numeric_caned, 2, as.numeric)
class(only_numeric_caned)
class(matrix_only_numeric_caned)
View(matrix_only_numeric_caned)
View(only_numeric_caned)
carcinoid_and_ntl_expression_dataframe <- readRDS("~/Documents/Uni/Tutorium/2020-project-04-group-05/Rds/carcinoid_and_ntl_expression_dataframe.rds")
View(carcinoid_and_ntl_expression_dataframe)
# rownames were added (why tho?)
rownames(matrix_only_numeric_caned) <- carcinoid_and_ntl_expression_dataframe$X1
# how much each gene contributes to PC components
pca <- prcomp(t(matrix_only_numeric_caned), scale = T, center= T)
# how much each gene contributes to PC components
pca <- prcomp(t(matrix_only_numeric_caned), scale = T, center= T)
gene.contribution <- pca$rotation
View(gene.contribution)
head(sort(abs(gene.contribution[,1]), decreasing = TRUE))
ecdf(sort(abs(gene.contribution[,1]), decreasing = TRUE))(0.002073271)
genes_contributing_to_variance<-matrix_only_numeric_caned[-which(sort(abs(gene.contribution[,1]), decreasing = TRUE)< 0.002073271),]
genes_contributing_to_variance<-as.data.frame(genes_contributing_to_variance)
gene_names2<-as.vector(genes_contributing_to_variance%>%select(starts_with("X1")))
complete_fc_p2<- data.frame(fc,log_p_values,gene_names2)
#install.packages("tidyverse")
library(tidyverse)
fc <- matrix_mean_values_updated[,1] - matrix_mean_values_updated[,2]
mean_gene_expression_healthy_samples_updated<-apply(ntl_genes_contributing_to_variance,1,mean)
carcinoid_expression_dataframe_numerical <- readRDS("~/Documents/Uni/Tutorium/2020-project-04-group-05/Rds/carcinoid_expression_dataframe_numerical.rds")
carcinoid_genes_contributing_to_variance<-carcinoid_expression_dataframe_numerical[-which(sort(abs(gene.contribution[,1]), decreasing = TRUE)< 0.002073271),]
ntl_expression_dataframe <- readRDS("~/Documents/Uni/Tutorium/2020-project-04-group-05/Rds/ntl_expression_dataframe.rds")
ntl_genes_contributing_to_variance<-ntl_expression_dataframe[-which(sort(abs(gene.contribution[,1]), decreasing = TRUE)< 0.002073271),]
genes_contributing_to_variance<-matrix_only_numeric_caned[-which(sort(abs(gene.contribution[,1]), decreasing = TRUE)< 0.002073271),]
carcinoid_genes_contributing_to_variance_matrix<-apply(carcinoid_genes_contributing_to_variance, c(1,2), as.numeric)
ntl_genes_contributing_to_variance_matrix<-apply(ntl_genes_contributing_to_variance, c(1,2), as.numeric)
mean_gene_expression_healthy_samples<-apply(ntl_genes_contributing_to_variance,1,mean)
mean_gene_expression_cancer_samples<-apply(carcinoid_genes_contributing_to_variance,1,mean)
mean_gene_expression_healthy_samples_updated<-apply(ntl_genes_contributing_to_variance,1,mean)
mean_gene_expression_cancer_samples_updated<-apply(carcinoid_genes_contributing_to_variance,1,mean)
mean_gene_expression_healthy_samples_updated<-apply(ntl_genes_contributing_to_variance,1,mean)
mean_gene_expression_cancer_samples_updated<-apply(carcinoid_genes_contributing_to_variance,1,mean)
matrix_mean_values_updated<-cbind(mean_gene_expression_cancer_samples, mean_gene_expression_healthy_samples)
dim(matrix_mean_values_updated)
colnames(matrix_mean_values_updated)
fc <- matrix_mean_values_updated[,1] - matrix_mean_values_updated[,2]
complete_fc_p2<- data.frame(fc,log_p_values,gene_names2)
log_p_values<--log10(corrpvalues)
pvalues <- c ()
for (i in seq(1,nrow(carcinoid_genes_contributing_to_variance_matrix), by=1)) {
x=carcinoid_genes_contributing_to_variance_matrix[i,]
y=ntl_genes_contributing_to_variance_matrix[i,]
pvalues[[i]] <-wilcox.test(x,y, alt= "two.sided")$p.value}
corrpvalues <- p.adjust(pvalues, method = 'fdr')
plot(fc, -log10(corrpvalues))
log_p_values<--log10(corrpvalues)
fc_p<-data.frame(fc,log_p_values)
complete_fc_p2<- data.frame(fc,log_p_values,gene_names2)
head(complete_fc_p2)
diff_exp_genes2<- complete_fc_p2[fc_p$log_p_values%in%significant_p & fc_p$fc%in%significant_fc,]
up_reg_genes_squam <- read_csv("Documents/Uni/Tutorium/2020-project-04-group-02/raw data/3-postLIMMA-up-down-reg-genes/up_reg_genes_squam.csv",
+     col_types = cols(X1 = col_skip()))
up_reg_genes_squam <- readr::read_csv("Documents/Uni/Tutorium/2020-project-04-group-02/raw data/3-postLIMMA-up-down-reg-genes/up_reg_genes_squam.csv",
+     col_types = cols(X1 = col_skip()))
#Kmeans clustering:
library(readr)
up_reg_genes_squam <- readr::read_csv("Documents/Uni/Tutorium/2020-project-04-group-02/raw data/3-postLIMMA-up-down-reg-genes/up_reg_genes_squam.csv",
+     col_types = cols(X1 = col_skip()))
up_reg_genes_squam <- readr::read_csv("Documents/Uni/Tutorium/2020-project-04-group-02/raw data/3-postLIMMA-up-down-reg-genes/up_reg_genes_squam.csv",
col_types = cols(X1 = col_skip()))
up_reg_genes_squam <- readr::read_csv("~/Documents/Uni/Tutorium/2020-project-04-group-02/raw data/3-postLIMMA-up-down-reg-genes/up_reg_genes_squam.csv",
col_types = cols(X1 = col_skip()))
down_reg_genes_squam <- read_csv("~/Documents/Uni/Tutorium/2020-project-04-group-02/raw data/3-postLIMMA-up-down-reg-genes/down_reg_genes_squam.csv",
+     col_types = cols(X1 = col_skip()))
down_reg_genes_squam <- read_csv("~/Documents/Uni/Tutorium/2020-project-04-group-02/raw data/3-postLIMMA-up-down-reg-genes/down_reg_genes_squam.csv",
col_types = cols(X1 = col_skip()))
up_down_reg_genes_squam <- cbind(up_reg_genes_squam, down_reg_genes_squam)
function.scaleddata <- function(a)
{scaled_data = as.matrix(scale(a))}
set.seed(123)
k.max=15
function.elbowplot1 <- function(a)
{data = a
wss <- sapply(1:k.max, function(k){kmeans(data, k, nstart = 50, iter.max = 15)$tot.withinss})
wss}
function.elbowplot1 <- function(a) {
data = a
wss <- sapply(1:k.max, function(k){
kmeans(data, k, nstart = 50, iter.max = 15)$tot.withinss
})
wss}
function.elbowplot2 <- function(a)
{plot(a, xlab = "number of clusters", main = "Elbowplot" )}
function.elbowplot2(a=function.elbowplot1(a=function.scaleddata(a=up_reg_genes_squam)))
function.elbowplot2(a=function.elbowplot1(a=function.scaleddata(a=down_reg_genes_squam)))
function.elbowplot2 <- function(a)
{plot(a, xlab = "number of clusters", main = "Elbowplot", type = 'b')}
function.elbowplot2(a=function.elbowplot1(a=function.scaleddata(a=up_reg_genes_squam)))
function.elbowplot2(a=function.elbowplot1(a=function.scaleddata(a=down_reg_genes_squam)))
function.elbowplot2(a=function.elbowplot1(a=function.scaleddata(a=up_down_reg_genes_squam)))
function.silhouette <- function(a)
{dis = dist(a)^2
res = kmeans(a,2)
sil = silhouette (res$cluster, dis)
plot(sil)}
function.silhouette(a=function.scaleddata(a=up_reg_genes_squam))
function.silhouette <- function(a)
{dis = dist(a)^2
res = kmeans(a,2)
sil = silhouette (res$cluster, dis)
plot(sil)}
function.silhouette(a=function.scaleddata(a=up_reg_genes_squam))
??silhouette
function.silhouette <- function(a)
{dis = dist(a)^2
res = kmeans(a,2)
sil = cluster::silhouette (res$cluster, dis)
plot(sil)}
function.silhouette(a=function.scaleddata(a=up_reg_genes_squam))
function.silhouette(a=function.scaleddata(a=down_reg_genes_squam))
function.silhouette(a=function.scaleddata(a=up_down_reg_genes_squam))
function.kmeans <- function(a)
{kmm = kmeans(a, 2, nstart = 50, iter.max = 15)
kmm}
function.kmeans(a= function.scaleddata(a=up_reg_genes_squam))
function.kmeans(a= function.scaleddata(a=down_reg_genes_squam))
function.kmeans(a= function.scaleddata(a=up_down_reg_genes_squam))
sample.info.squam <- sample_infos_squam[,-1]
