caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
det_rev
p_v <- ggplot(det_rev, aes(project, pop, fill = priority)) +
geom_col(col = 'black') +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
geom_text(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(x=project, y=pop, label=pop, fill=F), vjust=0) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v <- ggplot(det_rev, aes(project, pop, fill = priority)) +
geom_col(col = 'black') +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
geom_text(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(x=project, y=pop, label=pop, fill=F), vjust=0) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
p_v <- ggplot(det_rev, aes(project, pop, fill = priority)) +
geom_col(col = 'black') +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
geom_text(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(x=project, y=pop, label=pop, fill=NA), vjust=0) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
p_v <- ggplot(det_rev, aes(project, pop, fill = priority)) +
geom_col(col = 'black') +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
geom_text(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(x=project, y=pop, label=pop, fill='black'), vjust=0) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
p_v <- ggplot(det_rev, aes(project, pop, fill = priority)) +
geom_col(col = 'black') +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
geom_text(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(x=project, y=pop, label=pop), fill='black', vjust=0) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
p_v <- ggplot(det_rev, aes(project, pop)) +
geom_col(aes(fill = priority), col = 'black') +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
geom_text(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(x=project, y=pop, label=pop), vjust=0) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
p_v <- ggplot(det_rev, aes(project, pop)) +
geom_col(aes(fill = priority), col = 'black') +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
geom_text(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(x=project, y=pop, label=tot), vjust=0) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
rlang::last_error()
det_rev %>% group_by(project) %>% summarize(tot = sum(pop))
p_v <- ggplot(det_rev, aes(project, pop)) +
geom_col(aes(fill = priority), col = 'black') +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
geom_text(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(label=tot), vjust=0) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
det_rev %>% group_by(project) %>% summarize(tot = sum(pop))
p_v <- ggplot(det_rev, aes(project, pop)) +
geom_col(aes(fill = priority), col = 'black') +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
geom_text(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(label=tot), vjust=0) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
summ <- det_rev %>% group_by(project) %>% summarize(tot = sum(pop))
p_v <- ggplot(det_rev, aes(project, pop)) +
geom_col(aes(fill = priority), col = 'black') +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
geom_text(data = summ,
aes(label=summ$tot), vjust=0) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
p_v <- ggplot(det_rev, aes(project, pop)) +
geom_col(aes(fill = priority), col = 'black') +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
geom_text(data = summ,
aes(label=tot), vjust=0) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
p_v <- ggplot(det_rev, aes(project, pop)) +
geom_col(aes(fill = priority), col = 'black') +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
geom_text(data = summ,
aes(y=tot, label=tot), vjust=0) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
rm(summ)
p_v <- ggplot(det_rev, aes(project, pop)) +
geom_col(aes(fill = priority), col = 'black') +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
geom_text(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(y=tot, label=tot), vjust=0) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
p_v <- ggplot(det_rev, aes(project, pop)) +
geom_col(aes(fill = priority), col = 'black') +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
geom_text(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(y=tot, label=tot), vjust=1) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
p_v <- ggplot(det_rev, aes(project, pop)) +
geom_col(aes(fill = priority), col = 'black') +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
geom_text(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(y=tot, label=tot), hjust=1) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
p_v <- ggplot(det_rev, aes(project, pop)) +
geom_col(aes(fill = priority), col = 'black') +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
geom_label(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(y=tot, label=tot), hjust=1) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
'bronze' %in% colours()
'firebrick' %in% colours()
'copper' %in% colours()
p_v <- ggplot(det_rev, aes(project, pop)) +
geom_col(aes(fill = priority), col = 'black') +
geom_label(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(y=tot, label=tot), hjust=1) +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
'silver' %in% colours()
'silver3' %in% colours()
'gray4' %in% colours()
'ocre' %in% colours()
colours
colours()
p_v <- ggplot(det_rev, aes(project, pop)) +
geom_col(aes(fill = priority), col = 'black') +
geom_label(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(y=tot, label=tot), hjust=1,
fill = c('gold', 'gray', 'goldenrod3', rep('white', length(tot)-3))) +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
p_v <- ggplot(det_rev, aes(project, pop)) +
geom_col(aes(fill = priority), col = 'black') +
geom_label(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(y=tot, label=tot), hjust=1,
fill = c('gold', 'gray', 'goldenrod3', rep('white', length(levels(project))-3))) +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v <- ggplot(det_rev, aes(project, pop)) +
geom_col(aes(fill = priority), col = 'black') +
geom_label(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(y=tot, label=tot), hjust=1,
fill = c('gold', 'gray', 'goldenrod3', rep('white', length(levels(det_rev$project))-3))) +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
p_v <- ggplot(det_rev, aes(project, pop)) +
geom_col(aes(fill = priority), col = 'black') +
geom_label(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(y=tot, label=tot), hjust=1,
fill = c(rep('white', length(levels(det_rev$project))-3), 'goldenrod3', 'gray', 'gold')) +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
freqs = c('Diagnosis and \nscreening' = 5,
'Infection prevention \nand control within \nhealthcare settings' = 6,
'Continuation of blood \nand organ donation' = 11,
'Reorganization of \nhealthcare facilities' = 5,
'Management of \nnon-COVID-19 \npatients' = 4,
'Medicines' = 3,
'Delivery of \nmaternity care' = 1,
'Delivery of \nmental health care' = 1,
'Availability of \nan effective \nworkforce' = 7)
source('~/Documents/Vale/key-findings-barplot.R', echo=TRUE)
source('~/Documents/Master/project-choice-DS.r', echo=TRUE)
p_v
source('~/Documents/Vale/key-findings-barplot.R', echo=TRUE)
?epf
??epf
?ggsave
183/30
ggsave('/home/alvaro/Documents/Vale/key-findings-barplot.eps',
plot = p, width = 13/1.25, height = 8/1.25)
source('~/Documents/covid-r-plots/scripts/plots-covid-timeseries.r', echo=TRUE)
ggsave('~/Documents/Vale/italy-new-cumul-cases-deaths.eps', plot = p_combi, height = 7, width = 14)
#pandemic_start = df_sub %>% filter(loc == 'Italy', timenorm_num == 0) %>% select(time_base) %>% unlist() %>% as.Date(origin = "1970-01-01")
cols = c('Active' = '#E08B00', 'Recovered-cumul' = '#7CAE00', 'Died-cumul' = 'red', 'Total-cumul' = 'darkgrey')
p_cumul = df_sub %>%
filter(loc == "Italy", timenorm_num >= 1) %>%
ggplot(., aes(x = time_base)) +
geom_col(aes(y = conf, fill = 'Total-cumul'), alpha = .7) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
geom_vline(aes(xintercept = as.Date("2020-03-09")), linetype = 2) +
annotate(x = as.Date("2020-03-09"), hjust = 0.5, geom = 'label',
y = df_sub[which(df_sub$loc == 'Italy' & df_sub$time_base == max(df_sub$time_base)), 'conf'],
label = "Lockdown starts") +
geom_vline(aes(xintercept = as.Date("2020-05-04")), linetype = 2) +
annotate(x = as.Date("2020-05-04"), hjust = 0.5, geom = 'label',
y = df_sub[which(df_sub$loc == 'Italy' & df_sub$time_base == max(df_sub$time_base)), 'conf'],
label = "Lockdown ends") +
scale_fill_manual(name="Legend", values=cols) +
scale_y_continuous(labels = scales::label_number()) +
scale_x_date(breaks = c(as.Date(c("2020-03-09", "2020-05-04")),
seq(min(df_italy_new$time_base), max(df_italy_new$time_base), length.out = 6))
) +
labs(y = "", x = "") +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
cols_2 = c('New cases' = '#E08B00', 'New deaths' = 'red')
df_italy_new = df_sub %>%
filter(loc == "Italy", timenorm_num >= 1) %>%
mutate('new_cases' = c(NA, diff(conf)),
'new_deaths' = c(NA, diff(died))) %>%
select(time_base, new_cases, new_deaths)
#pandemic_start = df_sub %>% filter(loc == 'Italy', timenorm_num == 0) %>% select(time_base) %>% unlist() %>% as.Date(origin = "1970-01-01")
cols = c('Active' = '#E08B00', 'Recovered-cumul' = '#7CAE00', 'Died-cumul' = 'red', 'Total-cumul' = 'darkgrey')
p_cumul = df_sub %>%
filter(loc == "Italy", timenorm_num >= 1) %>%
ggplot(., aes(x = time_base)) +
geom_col(aes(y = conf, fill = 'Total-cumul'), alpha = .7) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = .7) +
geom_vline(aes(xintercept = as.Date("2020-03-09")), linetype = 2) +
annotate(x = as.Date("2020-03-09"), hjust = 0.5, geom = 'label',
y = df_sub[which(df_sub$loc == 'Italy' & df_sub$time_base == max(df_sub$time_base)), 'conf'],
label = "Lockdown starts") +
geom_vline(aes(xintercept = as.Date("2020-05-04")), linetype = 2) +
annotate(x = as.Date("2020-05-04"), hjust = 0.5, geom = 'label',
y = df_sub[which(df_sub$loc == 'Italy' & df_sub$time_base == max(df_sub$time_base)), 'conf'],
label = "Lockdown ends") +
scale_fill_manual(name="Legend", values=cols) +
scale_y_continuous(labels = scales::label_number()) +
scale_x_date(breaks = c(as.Date(c("2020-03-09", "2020-05-04")),
seq(min(df_italy_new$time_base), max(df_italy_new$time_base), length.out = 6))
) +
labs(y = "", x = "") +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
p_new = ggplot(df_italy_new, aes(x = time_base)) +
geom_col(aes(y = new_cases, fill = 'New cases'), alpha = .7) +
geom_col(aes(y = new_deaths, fill = 'New deaths'), alpha = .7) +
#geom_line(aes(y = new_cases), col = 'black', lwd = .5) +
geom_vline(aes(xintercept = as.Date("2020-03-09")), linetype = 2) +
annotate(x = as.Date("2020-03-09"), hjust = 0.5, geom = 'label',
y = max(df_italy_new[, 2:3], na.rm = T),
label = "Lockdown starts") +
geom_vline(aes(xintercept = as.Date("2020-05-04")), linetype = 2) +
annotate(x = as.Date("2020-05-04"), hjust = 0.5, geom = 'label',
y = max(df_italy_new[, 2:3], na.rm = T),
label = "Lockdown ends") +
scale_fill_manual(name="Legend", values=cols_2) +
scale_x_date(breaks = c(as.Date(c("2020-03-09", "2020-05-04")),
seq(min(df_italy_new$time_base), max(df_italy_new$time_base), length.out = 6))
) +
scale_y_continuous(labels = scales::label_number()) +
labs(y = "", x = "") +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
p_combi = gridExtra::arrangeGrob(grobs = list(p_cumul, p_new), ncol = 2)
ggsave('~/Documents/Vale/italy-new-cumul-cases-deaths.eps', plot = p_combi, height = 7, width = 14)
ggsave('~/Documents/Vale/italy-new-cumul-cases-deaths.pdf', plot = p_combi, height = 7, width = 14)
p_new = ggplot(df_italy_new, aes(x = time_base)) +
geom_col(aes(y = new_cases, fill = 'New cases')) +
geom_col(aes(y = new_deaths, fill = 'New deaths')) +
#geom_line(aes(y = new_cases), col = 'black', lwd = .5) +
geom_vline(aes(xintercept = as.Date("2020-03-09")), linetype = 2) +
annotate(x = as.Date("2020-03-09"), hjust = 0.5, geom = 'label',
y = max(df_italy_new[, 2:3], na.rm = T),
label = "Lockdown starts") +
geom_vline(aes(xintercept = as.Date("2020-05-04")), linetype = 2) +
annotate(x = as.Date("2020-05-04"), hjust = 0.5, geom = 'label',
y = max(df_italy_new[, 2:3], na.rm = T),
label = "Lockdown ends") +
scale_fill_manual(name="Legend", values=cols_2) +
scale_x_date(breaks = c(as.Date(c("2020-03-09", "2020-05-04")),
seq(min(df_italy_new$time_base), max(df_italy_new$time_base), length.out = 6))
) +
scale_y_continuous(labels = scales::label_number()) +
labs(y = "", x = "") +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
p_combi = gridExtra::arrangeGrob(grobs = list(p_cumul, p_new), ncol = 2)
ggsave('~/Documents/Vale/italy-new-cumul-cases-deaths.pdf', plot = p_combi, height = 7, width = 14)
ggsave('~/Documents/Vale/italy-new-cumul-cases-deaths.eps', plot = p_combi, height = 7, width = 14)
p_cumul = df_sub %>%
filter(loc == "Italy", timenorm_num >= 1) %>%
ggplot(., aes(x = time_base)) +
geom_col(aes(y = conf, fill = 'Total-cumul'), alpha = 1) +
geom_col(aes(y = died, fill = 'Died-cumul'), alpha = 1) +
geom_vline(aes(xintercept = as.Date("2020-03-09")), linetype = 2) +
annotate(x = as.Date("2020-03-09"), hjust = 0.5, geom = 'label',
y = df_sub[which(df_sub$loc == 'Italy' & df_sub$time_base == max(df_sub$time_base)), 'conf'],
label = "Lockdown starts") +
geom_vline(aes(xintercept = as.Date("2020-05-04")), linetype = 2) +
annotate(x = as.Date("2020-05-04"), hjust = 0.5, geom = 'label',
y = df_sub[which(df_sub$loc == 'Italy' & df_sub$time_base == max(df_sub$time_base)), 'conf'],
label = "Lockdown ends") +
scale_fill_manual(name="Legend", values=cols) +
scale_y_continuous(labels = scales::label_number()) +
scale_x_date(breaks = c(as.Date(c("2020-03-09", "2020-05-04")),
seq(min(df_italy_new$time_base), max(df_italy_new$time_base), length.out = 6))
) +
labs(y = "", x = "") +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
p_new = ggplot(df_italy_new, aes(x = time_base)) +
geom_col(aes(y = new_cases, fill = 'New cases'), alpha = 1) +
geom_col(aes(y = new_deaths, fill = 'New deaths'), alpha = 1) +
#geom_line(aes(y = new_cases), col = 'black', lwd = .5) +
geom_vline(aes(xintercept = as.Date("2020-03-09")), linetype = 2) +
annotate(x = as.Date("2020-03-09"), hjust = 0.5, geom = 'label',
y = max(df_italy_new[, 2:3], na.rm = T),
label = "Lockdown starts") +
geom_vline(aes(xintercept = as.Date("2020-05-04")), linetype = 2) +
annotate(x = as.Date("2020-05-04"), hjust = 0.5, geom = 'label',
y = max(df_italy_new[, 2:3], na.rm = T),
label = "Lockdown ends") +
scale_fill_manual(name="Legend", values=cols_2) +
scale_x_date(breaks = c(as.Date(c("2020-03-09", "2020-05-04")),
seq(min(df_italy_new$time_base), max(df_italy_new$time_base), length.out = 6))
) +
scale_y_continuous(labels = scales::label_number()) +
labs(y = "", x = "") +
theme(legend.position = 'top', axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
p_combi = gridExtra::arrangeGrob(grobs = list(p_cumul, p_new), ncol = 2)
ggsave('~/Documents/Vale/italy-new-cumul-cases-deaths.eps', plot = p_combi, height = 7, width = 14)
ggsave('/home/alvaro/Documents/Vale/key-findings-barplot.eps',
plot = p, width = 13/1.25, height = 8/1.25)
source('~/Documents/Master/project-choice-DS.r', echo=TRUE)
warnings()
library(dplyr)
library(ggplot2)
library(tidyr)
library(googlesheets4)
link = 'https://docs.google.com/spreadsheets/d/1eqh2d_QNZXlEiGEYPfk0Av5gTCvP5zi0wB3_uJ1pzsE/edit#gid=1023841900'
sheet_id = as_sheets_id(link)
sheet = googlesheets4::read_sheet(link)
sheet = googlesheets4::read_sheet(sheet_id)
replace_other <- function(df){
other_index <- apply(sheet, c(1,2), function(x) x == "Other")
other_index <- which(other_index, arr.ind = T)
for (i in nrow(other_index)){
r <- other_index[i,1]
c <- other_index[i,2]
df[r,c] <- as.character(df[r, (c+1)])
}
return(df[, -grep("If other, please", colnames(df))])
}
sheet <-replace_other(sheet)
colnames(sheet) <- c('time', 'name', 'first', 'second', 'third')
proj_names <- unique(unname(unlist(sheet[,3:5])))
reformat_names <- function(namesvec, char_limit = 8){
out <- vector(mode = 'character', length = length(namesvec))
for (i in 1:length(namesvec)){
words <- strsplit(gsub('\n', ' ', namesvec[i]), ' ')[[1]]
cur_chars <- 0
lines <- ""
line <- ""
for (word in words) {
cur_chars <- cur_chars + nchar(word)
if (cur_chars >= char_limit){
lines <- paste0(lines, paste0(line, "\n"))
line <- word
cur_chars <- 0
} else{
line <- paste(line, word)
}
lines <- paste0(lines, paste0(line, "\n"))
lines <- stringr::str_replace(lines, "^[\n ]", "")
lines <- stringr::str_replace(lines, "$[\n ]", "")
out[i] <- lines
}
return(out)
}
ref_names <- reformat_names(proj_names)
names(ref_names) <- proj_names
### Popularity score -------------------
proj_pop <- setNames(rep(0, length(proj_names)), nm = proj_names)
for (proj in proj_names){
first <- sum(grepl(proj, sheet$first, fixed=T))
second <- sum(grepl(proj, sheet$second, fixed=T))
third <- sum(grepl(proj, sheet$third, fixed=T))
pop <- first + 0.5*second + 0.33*third
proj_pop[proj] <- pop
}
pop <- tibble('names' = ref_names, 'pop' = proj_pop)
caption <- paste('*Popularity score calculated as the sum of the appearances of each project weighted by its position (1st = 1, 2nd = 1/2, 3rd = 1/3)',
'\tNumber of participants:', nrow(sheet))
p0 <- ggplot(pop, aes(names, pop, fill = names)) +
geom_col() +
guides(fill=F) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity score*',
caption = caption)
### Detailed popularity score -------------------
details <- sheet %>%
pivot_longer(., cols = 3:5, names_to = "priority", values_to = "project") %>%
select(3:4) %>%
mutate(pop = ifelse(priority == 'first', 1,
ifelse(priority == 'second', 0.5, 0.3)),
priority = factor(priority, levels = c('first', 'second', 'third')),
names = ref_names[project],
project = factor(project, levels = names(sort(proj_pop, decreasing = T)))
) %>%
arrange(project) %>%
mutate(names_vert = reformat_names(names, char_limit = 25))
capt = 'Popularity score calculated as the sum of the appearances of each project weighted by its position (1st = 1, 2nd = 1/2, 3rd = 1/3)'
p <- ggplot(details, aes(project, pop, fill = priority)) +
geom_col(col = 'black') +
scale_x_discrete(labels = details$names) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top')
p
det_rev <- details %>%
mutate(project = factor(unlist(project),
levels = rev(levels(project)))
)
p_v <- ggplot(det_rev, aes(project, pop)) +
geom_col(aes(fill = priority), col = 'black') +
geom_label(data = det_rev %>% group_by(project) %>% summarize(tot = sum(pop)),
aes(y=tot, label=tot), hjust=1,
fill = c(rep('white', length(levels(det_rev$project))-3), 'goldenrod3', 'gray', 'gold')) +
scale_x_discrete(labels = reformat_names(levels(det_rev$project), char_limit = 50)) +
labs(title = 'Popularity of Data Science Projects', x = '', y = 'Popularity',
subtitle = paste('Number of participants:', nrow(sheet)),
caption = capt) +
theme(legend.position = 'top') +
coord_flip()
p_v
source('~/Documents/Master/project-choice-DS.r', echo=TRUE)
