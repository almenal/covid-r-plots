verbose      = FALSE)
head(KEGG.basa)
KEGG_basaloid=as.data.frame(KEGG.basa)
?grid.arrange
?textGrob
?gpar
head(GSEA[order(padj, -abs(NES)), ], n=10)
library(ggplot2)
GSEAP1=plotEnrichment (Pathway_list[["HALLMARK_E2F_TARGETS"]],
ranks) +labs(title = "HALLMARK_E2F_TARGETS")
GSEAP2=plotEnrichment (Pathway_list[["HALLMARK_G2M_CHECKPOINT"]],
ranks)+labs(title = "HALLMARK_G2M_CHECKPOINT")
GSEAP3=plotEnrichment (Pathway_list[["HALLMARK_TNFA_SIGNALING_VIA_NFKB"]],
ranks)+labs(title = "HALLMARK_TNFA_SIGNALING_VIA_NFKB")
GSEAP4=plotEnrichment (Pathway_list[["HALLMARK_INTERFERON_GAMMA_RESPONSE"]],
ranks)+labs(title = "HALLMARK_INTERFERON_GAMMA_RESPONSE")
library(gridExtra)
grid.arrange(GSEAP1, GSEAP2, GSEAP3, GSEAP4, ncol=2)
# BiocManager::install("org.Hs.eg.db")
getMatrixWithSymbols <- function(df){
require("org.Hs.eg.db")
geneSymbols <- mapIds(org.Hs.eg.db,rownames(df), 'ENTREZID', 'SYMBOL')
inds <- which(!is.na(geneSymbols))
found_genes <- geneSymbols[inds]
df2 <- df[names(found_genes), ]
rownames(df2) <- found_genes
return(df2)
}
expression_ID=getMatrixWithSymbols(expression)
fold_change_all_id <- sapply(1:nrow(expression_ID), function(i){mean(as.matrix(expression_ID[i,which(find_nontumoraldata==FALSE)]))-mean(as.matrix(expression_ID[i,which(find_nontumoraldata==TRUE)]))})
ranks_id= fold_change_all_id
names(ranks_id)=rownames(expression_ID)
ranks_id=(sort(ranks_id, decreasing = TRUE))
BiocManager::install("pathview")
BiocManager::install("clusterProfiler")
library(clusterProfiler)
search_kegg_organism('hsa', by='kegg_code')
KEGG<- gseKEGG(geneList     = ranks_id,
organism     = 'hsa',
minGSSize    = 120,
pvalueCutoff = 0.05)
KEGG_all=as.data.frame(KEGG)
head(KEGG)
ranks_basa <- sapply(1:nrow(expression), function(i){mean(as.matrix(expression[i,which(find_nontumoraldata==FALSE)]))-mean(as.matrix(expression[i,which(find_basaloids==TRUE)]))})
names(ranks_basa)=expression_unchanged$X
ranks_basa=(sort(ranks_basa, decreasing = TRUE))
barplot(ranks, axisnames = FALSE, xlab = "ranks", ylab = "fold change")
library(fgsea)
GSEA_basaloid<- fgsea(pathways = Pathway_list,
stats    = ranks_basa,
minSize  = 15,
maxSize  = 500,
nperm = 350)
#,eps=0.0)
head(GSEA_basaloid[order(padj, -abs(NES)), ], n=10)
library(ggplot2)
GSEAP1=plotEnrichment (Pathway_list[["HALLMARK_E2F_TARGETS"]],
ranks) +labs(title = "HALLMARK_E2F_TARGETS")
GSEAP2=plotEnrichment (Pathway_list[["HALLMARK_G2M_CHECKPOINT"]],
ranks)+labs(title = "HALLMARK_G2M_CHECKPOINT")
GSEAP3=plotEnrichment (Pathway_list[["HALLMARK_MTORC1_SIGNALING"]],
ranks)+labs(title = "HALLMARK_MTORC1_SIGNALING")
GSEAP4=plotEnrichment (Pathway_list[["HALLMARK_MYC_TARGETS_V1"]],
ranks)+labs(title = "HALLMARK_MYC_TARGETS_V1")
library(gridExtra)
grid.arrange(GSEAP1, GSEAP2, GSEAP3, GSEAP4, ncol=2)
fold_change_basaloid_id<- sapply(1:nrow(expression_ID), function(i){mean(as.matrix(expression_ID[i,which(find_nontumoraldata==FALSE)]))-mean(as.matrix(expression_ID[i,which(find_nontumoraldata==TRUE)]))})
ranks_basa_id= fold_change_basaloid_id
names(ranks_basa_id)=rownames(expression_ID)
ranks_basa_id=(sort(ranks_basa_id, decreasing = TRUE))
KEGG.basa <- gseKEGG(geneList     = ranks_basa_id,
organism     = 'hsa',
minGSSize    = 120,
pvalueCutoff = 0.05,
verbose      = FALSE)
head(KEGG.basa)
KEGG_basaloid=as.data.frame(KEGG.basa)
library(dplyr)
GSEA_basaloid_sig <- GSEA_basaloid[which(GSEA_basaloid$padj<0.05),] #new
GSEA_sig <- GSEA[which(GSEA$padj<0.05),] #new
basaloid.specific.pathways = dplyr::anti_join(GSEA_basaloid_sig, GSEA_sig, by = "pathway") #adapted
basaloid.not.specific=dplyr::semi_join(GSEA_basaloid_sig, GSEA_sig, by = "pathway") #adapted
##install.packages("kableExtra")
##install.packages("knitr")
library(knitr)
library(kableExtra)
head(basaloid.specific.pathways)
head(basaloid.not.specific)
BiocManager::install("pathview")
library(pathview)
require(png)
require(grid)
see_pathview <- function(..., save_image = FALSE)
{
msg <- capture.output(pathview::pathview(...), type = "message")
msg <- grep("image file", msg, value = T)
filename <- sapply(strsplit(msg, " "), function(x) x[length(x)])
img <- png::readPNG(filename)
grid::grid.raster(img)
if(!save_image) invisible(file.remove(filename))
}
pathview <- see_pathview(gene.data = ranks_basa_id, pathway.id="hsa05200", species="hsa", out.suffix= "basaloid")
msg <- capture.output(pathview::pathview(...), type = "message")
msg
capture.output(pathview::pathview(...), type = "message")
msg
msg <- capture.output(pathview::pathview(...), type = "message")
?capture.output()
rm(w,ww,www)
see_pathview <- function(..., save_image = FALSE)
{
msg <- capture.output(pathview::pathview(...), type = "message")
msg <- grep("image file", msg, value = T)
filename <- sapply(strsplit(msg, " "), function(x) x[length(x)])
img <- png::readPNG(filename)
grid::grid.raster(img)
if(!save_image) invisible(file.remove(filename))
}
pathview <- see_pathview(gene.data = ranks_basa_id, pathway.id="hsa05200", species="hsa", out.suffix= "basaloid")
new_samples_info <- readRDS("/home/alvaro/Documents/Uni/Tutorium/2020-project-04-group-05/Rds/new_samples_info.rds")
View(new_samples_info)
?capture.output
?pathview::pathview
w <- pathview(gene.data = ranks_basa_id, pathway.id = "hsa05200", species = "hsa", out.suffix = "basaloid")
View(w)
wm <- capture.output(pathview(gene.data = ranks_basa_id, pathway.id = "hsa05200", species = "hsa", out.suffix = "basaloid"), type = "message")
wm
grep("image file", wm, value = T)
wmsg <- grep("image file", wm, value = T)
sapply(strsplit(wmsg, " "), function(x) x[length(x)])
strsplit(wmsg, " ")
sapply(strsplit(wmsg, " "), function(x) x)
sapply(strsplit(wmsg, " "), function(x) length(x))
sapply(strsplit(wmsg, " "), function(x) x[length(x)])
f <- sapply(strsplit(wmsg, " "), function(x) x[length(x)])
png::readPNG(f)
immg <- png::readPNG(f)
grid::grid.raster(immg)
see_pathview <- function(..., save_image = FALSE)
{
msg <- capture.output(pathview::pathview(...), type = "message")
msg <- grep("image file", msg, value = T)
filename <- sapply(strsplit(msg, " "), function(x) x[length(x)])
img <- png::readPNG(filename)
grid::grid.raster(img)
if(!save_image) invisible(file.remove(filename))
}
pathvieww <- see_pathview(gene.data = ranks_basa_id, pathway.id="hsa05200", species="hsa", out.suffix= "basaloid")
?path.expand
View(png::readPNG)
msg <- capture.output(pathview::pathview(...), type = "message")
msg <- capture.output(pathview::pathview(gene.data = ranks_basa_id, pathway.id="hsa05200", species="hsa", out.suffix= "basaloid"), type = "message")
msg <- capture.output(
pathview::pathview(gene.data = ranks_basa_id, pathway.id="hsa05200", species="hsa", out.suffix= "basaloid"))
msg <- capture.output(
pathview(gene.data = ranks_basa_id, pathway.id="hsa05200", species="hsa", out.suffix= "basaloid")), type = "message" )
msg <- capture.output(
pathview(gene.data = ranks_basa_id, pathway.id="hsa05200", species="hsa", out.suffix= "basaloid"), type = "message" )
wm <- capture.output(pathview(gene.data = ranks_basa_id, pathway.id = "hsa05200", species = "hsa", out.suffix = "basaloid"), type = "message")
msg <- capture.output(pathview(gene.data = ranks_basa_id, pathway.id = "hsa05200", species = "hsa", out.suffix = "basaloid"), type = "message")
msgw <- capture.output(pathview(gene.data = ranks_basa_id, pathway.id = "hsa05200", species = "hsa", out.suffix = "basaloid"), type = "message")
msg <- capture.output(pathview(gene.data = ranks_basa_id, pathway.id="hsa05200", species="hsa", out.suffix= "basaloid"), type = "message" )
see_pathview <- function(..., save_image = FALSE)
{
#msg <- capture.output(pathview::pathview(...), type = "message")
msg <- capture.output(pathview(gene.data = ranks_basa_id, pathway.id="hsa05200", species="hsa", out.suffix= "basaloid"), type = "message" )
msgg <- grep("image file", msg, value = T)
filename <- sapply(strsplit(msgg, " "), function(x) x[length(x)])
img <- png::readPNG(filename)
grid::grid.raster(img)
if(!save_image) invisible(file.remove(filename))
}
pathvieww <- see_pathview(gene.data = ranks_basa_id, pathway.id="hsa05200", species="hsa", out.suffix= "basaloid")
see_pathview <- function(..., save_image = FALSE)
{
msg <- capture.output(pathview::pathview(...), type = "message")
#msg <- capture.output(pathview(gene.data = ranks_basa_id, pathway.id="hsa05200", species="hsa", out.suffix= "basaloid"), type = "message" )
msgg <- grep("image file", msg, value = T)
filename <- sapply(strsplit(msgg, " "), function(x) x[length(x)])
img <- png::readPNG(filename)
grid::grid.raster(img)
if(!save_image) invisible(file.remove(filename))
}
pathvieww <- see_pathview(gene.data = ranks_basa_id, pathway.id="hsa05200", species="hsa", out.suffix= "basaloid")
?readPNG
View(pathview())
View(pathview
)
View(node.map)
View(node.color)
View(keggview.native)
source('~/.active-rstudio-document', echo=TRUE)
eskere(input = 16, message = "foo")
sapply(c('dplyr', 'ggplot'), require, text.only = T)
sapply(c('dplyr', 'ggplot'), require, character.only = T)
library(scales)
show_col(hue_pal()(2))
source('~/.active-rstudio-document', echo=TRUE)
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D') +
geom_line(aes(y = red), color = '#F8766D') +
geom_point(aes(y = red), color = '#00BFC4') +
geom_line(aes(y = red), color = '#00BFC4')
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D') +
geom_line(aes(y = red), color = '#F8766D') +
geom_point(aes(y = blue), color = '#00BFC4') +
geom_line(aes(y = blue), color = '#00BFC4')
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D') +
geom_line(aes(y = red), color = '#F8766D') +
geom_point(aes(y = blue), color = '#00BFC4') +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9))
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D') +
geom_line(aes(y = red), color = '#F8766D') +
geom_point(aes(y = blue), color = '#00BFC4') +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9))
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D') +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red, ymax = 1.1*red, ymax = 0.9*red)) +
geom_point(aes(y = blue), color = '#00BFC4') +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9))
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D') +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red, ymax = 1.1*red, ymin = 0.9*red)) +
geom_point(aes(y = blue), color = '#00BFC4') +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9))
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D') +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red, ymax = 1.05*red, ymin = 0.9995*red),
width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4') +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9))
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D') +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red, ymax = 1.005*red, ymin = 0.995*red),
width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4') +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9))
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red, ymax = 1.005*red, ymin = 0.995*red),
width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4') +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9))
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15) +
geom_line(aes(y = red), color = '#F8766D') +
#geom_errorbar(aes(y = red, ymax = 1.005*red, ymin = 0.995*red),
#             width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4') +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9))
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 3) +
geom_line(aes(y = red), color = '#F8766D') +
#geom_errorbar(aes(y = red, ymax = 1.005*red, ymin = 0.995*red),
#             width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4') +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9))
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 3) +
geom_line(aes(y = red), color = '#F8766D') +
#geom_errorbar(aes(y = red, ymax = 1.005*red, ymin = 0.995*red),
#             width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 3) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9))
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2.5) +
geom_line(aes(y = red), color = '#F8766D') +
#geom_errorbar(aes(y = red, ymax = 1.005*red, ymin = 0.995*red),
#             width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 3) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9))
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
#geom_errorbar(aes(y = red, ymax = 1.005*red, ymin = 0.995*red),
#             width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 3) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9))
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
#geom_errorbar(aes(y = red, ymax = 1.005*red, ymin = 0.995*red),
#             width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 2) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9)) +
scale_x_continuous(breaks = 0:6)
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
#geom_errorbar(aes(y = red, ymax = 1.005*red, ymin = 0.995*red),
#             width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 2) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9)) +
scale_x_continuous(breaks = 0:6) +
labs(x = 'Time after injection (hours)',
y = 'Social Disconnection')
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.05, ymin = red - 0.05),
width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 2) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9)) +
scale_x_continuous(breaks = 0:6) +
labs(x = 'Time after injection (hours)',
y = 'Social Disconnection')
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.045, ymin = red - 0.045),
width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 2) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9)) +
scale_x_continuous(breaks = 0:6) +
labs(x = 'Time after injection (hours)',
y = 'Social Disconnection')
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.025, ymin = red - 0.025),
width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 2) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9)) +
scale_x_continuous(breaks = 0:6) +
labs(x = 'Time after injection (hours)',
y = 'Social Disconnection')
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.0375, ymin = red - 0.025),
width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 2) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9)) +
scale_x_continuous(breaks = 0:6) +
labs(x = 'Time after injection (hours)',
y = 'Social Disconnection')
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.0375, ymin = red - 0.0375),
width = .2, alpha = .5) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 2) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9)) +
scale_x_continuous(breaks = 0:6) +
labs(x = 'Time after injection (hours)',
y = 'Social Disconnection')
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.0375, ymin = red - 0.0375),
width = .2, alpha = .5) +
annotate(geom = 'text', label = '*', x = c(2,3,4), y = data[c(3,4,5), 'red'])
data[c(3,4,5), 'red']
as.numeric(data[c(3,4,5), 'red'])
unlist(data[c(3,4,5), 'red'])
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.0375, ymin = red - 0.0375),
width = .2, alpha = .5) +
annotate(geom = 'text', label = '*', x = c(2,3,4), y = unlist(data[c(3,4,5), 'red']))
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.0375, ymin = red - 0.0375),
width = .2, alpha = .5) +
annotate(geom = 'text', label = '*', x = c(2,3,4), y = 1.05*unlist(data[c(3,4,5), 'red']))
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.0375, ymin = red - 0.0375),
width = .2, alpha = .5) +
annotate(geom = 'text', label = '*', x = c(2,3,4), y = 1.05*unlist(data[c(3,4,5), 'red']))
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.0375, ymin = red - 0.0375),
width = .2, alpha = .5) +
annotate(geom = 'text', x = c(2,3,4), y = 1.05*unlist(data[c(3,4,5), 'red']),
label = '*', color = 'red', size = 4) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 2) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9)) +
scale_x_continuous(breaks = 0:6) +
labs(x = 'Time after injection (hours)',
y = 'Social Disconnection')
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.0375, ymin = red - 0.0375),
width = .2, alpha = .5) +
annotate(geom = 'text', x = c(2,3,4), y = 1.05*unlist(data[c(3,4,5), 'red']),
label = '*', color = 'red', size = 10) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 2) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9)) +
scale_x_continuous(breaks = 0:6) +
labs(x = 'Time after injection (hours)',
y = 'Social Disconnection')
ggplot(data, aes(x = time)) +
geom_point(aes(y = red), color = '#F8766D', shape = 15, size = 2) +
geom_line(aes(y = red), color = '#F8766D') +
geom_errorbar(aes(y = red,
ymax = red + 0.0375, ymin = red - 0.0375),
width = .2, alpha = .5) +
annotate(geom = 'text', x = c(2,3,4), y = 1.05*unlist(data[c(3,4,5), 'red']),
label = '*', color = 'red', size = 7) +
geom_point(aes(y = blue), color = '#00BFC4', shape = 15, size = 2) +
geom_line(aes(y = blue), color = '#00BFC4') +
scale_y_continuous(limits = c(1.4, 2.9), breaks = c(1.4, 1.9, 2.4, 2.9)) +
scale_x_continuous(breaks = 0:6) +
labs(x = 'Time after injection (hours)',
y = 'Social Disconnection')
source('~/.active-rstudio-document', echo=TRUE)
citation('ggplot2')
ccaa <- readr::read_csv('https://raw.githubusercontent.com/datadista/datasets/master/COVID%2019/ccaa_covid19_datos_isciii_nueva_serie.csv')
ccaa <- ccaa %>%
arrange(ccaa, fecha) %>%
mutate(nuevos = c(NA, diff(num_casos)),
nuevos = ifelse(fecha == min(fecha), NA, num_casos))
View(ccaa)
sapply(c('dplyr', 'tidyr'), require, character.only = T)
ccaa <- ccaa %>%
arrange(ccaa, fecha) %>%
mutate(nuevos = c(NA, diff(num_casos)),
nuevos = ifelse(fecha == min(fecha), NA, num_casos))
View(ccaa)
max(ccaa$fecha)
ggplot(ccaa, aes(fecha, num_casos, color = ccaa)) + geom_line()
sapply(c('dplyr', 'ggplot2', 'tidyr'), require, character.only = T)
ggplot(ccaa, aes(fecha, num_casos, color = ccaa)) + geom_line()
ccaa %>%
filter(fecha >= (Sys.Date() - 7)) %>%
ggplot(., aes(fecha, num_casos, color = ccaa)) + geom_line()
ccaa %>%
filter(fecha >= (max(ccaa$fecha) - 7)) %>%
ggplot(., aes(fecha, num_casos, color = ccaa)) + geom_line()
max(ccaa$fecha)
max(ccaa$fecha) - 7)
max(ccaa$fecha) - 7
(max(ccaa$fecha) - 7)
ccaa %>%
filter(fecha >= (max(ccaa$fecha) - 7))
lastdate = max(ccaa$fecha)
ccaa %>%
filter(fecha >= (lastdate - 7)) %>%
ggplot(., aes(fecha, num_casos, color = ccaa)) + geom_line()
ccaa %>%
filter(fecha >= (lastdate - 15)) %>%
ggplot(., aes(fecha, num_casos, color = ccaa)) + geom_line()
data_conf = read.csv('../rawdata/time_series_covid19_confirmed_global.csv')
setwd("~/Documents/covid-r-plots/scripts")
library(dplyr)
library(stringr)
data_conf = read.csv('../rawdata/time_series_covid19_confirmed_global.csv')
data_died = read.csv('../rawdata/time_series_covid19_deaths_global.csv')
data_recov = read.csv('../rawdata/time_series_covid19_recovered_global.csv')
View(data_conf)
View(data_died)
View(data_recov)
# Merge regional data into nation-wide
locations <- paste(data_conf$Province.State, data_conf$Country.Region, sep = '-')
# Merge regional data into nation-wide
locations <- paste(data_conf$Province.State, data_conf$Country.Region, sep = '-') %>%
str_replace(., '^-', '')
locations_recov <- paste(data_recov$Province.State, data_recov$Country.Region, sep = '-') %>%
str_replace(., '^-', '')
locations_conf <- paste(data_conf$Province.State, data_conf$Country.Region, sep = '-') %>%
str_replace(., '^-', '')
locations_recov <- paste(data_recov$Province.State, data_recov$Country.Region, sep = '-') %>%
str_replace(., '^-', '')
missing_locs <- locations_conf[!(locations_conf %in% locations_recov)]
missing_locs
data_recov[226, c(1,2, ncol(data_recov))]
