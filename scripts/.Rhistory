a_u[which.max(d)]
length(gff@strand@values)
head(strand(gff))
(strand(gff))
length(gff)
ranges(gff)
View(gff)
gff@strand
gff@seqinfo
annot2 = "./annot-genome/Saccharomyces_cerevisiae.R64-1-1.99.gtf"
gff2 = rtracklayer::import(annot2)
annot1 = "./annot-genome/Saccharomyces_cerevisiae.R64-1-1.46.gff3"
gff1 = rtracklayer::import(annot1)
rm(gff, gff_df)
rm(annotpath)
rm(a,b,c,d)
rm(a_u)
gff2@seqinfo
gff2@ranges
length(gff1) ; length(gff2)
gff1_df = gff1 %>% data.frame()
gff2_df = gff2 %>% data.frame()
View(gff1_df)
View(gff2_df)
summary(gff1)
names(gff1)
?list.dirs
a = list.dirs()
a
setwd("~/")
a = list.dirs()
#!/usr/bin/R
print("Reminder: change working directory when sourcing from other device")
setwd('~/Documents/Uni/KnopLab/Internship-Alvaro/progress/')
# Checking if packages needed are installed and installing if not
pkgs = c('Rsubread', 'DESeq2', 'dplyr', 'apeglm')
#sapply(pkgs, require, character.only = TRUE)
sapply(pkgs, function(x){
if (!requireNamespace(x)){
BiocManager::install(x)
}else{
require(x, character.only = T)
}
})
# Loading the BAM files to construct count matrices
trimmed = paste('./align-trimmed', list.files('./align-trimmed/', pattern = "bam$"), sep = '/')
untrimmed = paste('./align-untrimmed', list.files('./align-untrimmed/', pattern = "bam$"), sep = '/')
###~~~Changing annotation to match UTRs --------------------------
annot1 = "./annot-genome/Saccharomyces_cerevisiae.R64-1-1.99.gff3"
annot2 = "./annot-genome/Saccharomyces_cerevisiae.R64-1-1.99.gtf"
### Import GFF/GTF data into GRanges object (Bioconductor class)
gff1 = rtracklayer::import(annot1)
gff2 = rtracklayer::import(annot2)
### Transforming into dataframe (SAF format) and
### changing the start and end column to match 3'UTR
gff1_utr = gff1 %>%
data.frame() %>%
select(GeneID = ID, Chr = seqnames, start, end, strand) %>%
mutate(GeneID = gsub("CDS:", "", GeneID))
View(gff1_utr)
gff1_utr = gff1 %>%
data.frame() %>%
filter(type == "CDS") %>%
select(GeneID = ID, Chr = seqnames, start, end, strand) %>%
mutate(GeneID = gsub("CDS:", "", GeneID))
View(gff1_utr)
gff1 = gff1 %>%
data.frame() %>%
filter(type == "CDS") %>%
select(GeneID = ID, Chr = seqnames, start, end, strand) %>%
mutate(GeneID = gsub("CDS:", "", GeneID))
gff1_utr = apply(gff1, 1, function(x) {
if (x["strand"] == "+") {
x["start"] = as.numeric(x["end"]) - window_small
x["end"] = as.numeric(x["end"]) + window_large
return(t(data.frame(x)))
} else if (x["strand"] == "-") {
x["start"] = as.numeric(x["end"]) - window_large
x["end"] = as.numeric(x["end"]) + window_small
return(t(data.frame(x)))
} else {
return(t(data.frame(x)))
}
}) #%>% t()
window_large = 200
window_small = 50
gff1_utr = apply(gff1, 1, function(x) {
if (x["strand"] == "+") {
x["start"] = as.numeric(x["end"]) - window_small
x["end"] = as.numeric(x["end"]) + window_large
return(t(data.frame(x)))
} else if (x["strand"] == "-") {
x["start"] = as.numeric(x["end"]) - window_large
x["end"] = as.numeric(x["end"]) + window_small
return(t(data.frame(x)))
} else {
return(t(data.frame(x)))
}
}) #%>% t()
View(gff1_utr)
gff1_utr = apply(gff1, 1, function(x) {
if (x["strand"] == "+") {
x["start"] = as.numeric(x["end"]) - window_small
x["end"] = as.numeric(x["end"]) + window_large
return(t(data.frame(x)))
} else if (x["strand"] == "-") {
x["start"] = as.numeric(x["end"]) - window_large
x["end"] = as.numeric(x["end"]) + window_small
return(t(data.frame(x)))
} else {
return(t(data.frame(x)))
}
}) %>% t()
gff1_utr = apply(gff1, 1, function(x) {
if (x["strand"] == "+") {
x["start"] = as.numeric(x["end"]) - window_small
x["end"] = as.numeric(x["end"]) + window_large
return(t(data.frame(x)))
} else if (x["strand"] == "-") {
x["start"] = as.numeric(x["end"]) - window_large
x["end"] = as.numeric(x["end"]) + window_small
return(t(data.frame(x)))
} else {
return(t(data.frame(x)))
}
}) %>% t() %>%
setNames(., colnames(gff1))
View(gff1_utr)
gff1_utr = apply(gff1, 1, function(x) {
if (x["strand"] == "+") {
x["start"] = as.numeric(x["end"]) - window_small
x["end"] = as.numeric(x["end"]) + window_large
return(t(data.frame(x)))
} else if (x["strand"] == "-") {
x["start"] = as.numeric(x["end"]) - window_large
x["end"] = as.numeric(x["end"]) + window_small
return(t(data.frame(x)))
} else {
return(t(data.frame(x)))
}
}) %>% t() %>%
as.data.frame() %>%
setNames(., colnames(gff1))
summary(gff1_utr)
gff1_utr = apply(gff1, 1, function(x) {
if (x["strand"] == "+") {
x["start"] = as.numeric(x["end"]) - window_small
x["end"] = as.numeric(x["end"]) + window_large
return(t(data.frame(x)))
} else if (x["strand"] == "-") {
x["start"] = as.numeric(x["end"]) - window_large
x["end"] = as.numeric(x["end"]) + window_small
return(t(data.frame(x)))
} else {
return(t(data.frame(x)))
}
}) %>% t() %>%
as.data.frame() %>%
setNames(., colnames(gff1)) %>%
mutate(start = as.numeric(unfactor(start)),
end = as.numeric(unfactor(end))
)
summary(gff1_utr)
a = table(GeneID)
a = table(gff1_utr$GeneID)
head(a)
max(a)
plot(a)
hist(a)
gff2 = gff2 %>%
data.frame() %>%
filter(type == "CDS") %>%
select(GeneID = gene_id, Chr = seqnames, start, end, strand)
View(gff2)
window_large = 200
window_small = 50
gff1 = gff1 %>%
data.frame() %>%
filter(type == "CDS") %>%
select(GeneID = ID, Chr = seqnames, start, end, strand) %>%
mutate(GeneID = gsub("CDS:", "", GeneID))
gff1_utr = apply(gff1, 1, function(x) {
if (x["strand"] == "+") {
x["start"] = as.numeric(x["end"]) - window_small
x["end"] = as.numeric(x["end"]) + window_large
return(t(data.frame(x)))
} else if (x["strand"] == "-") {
x["start"] = as.numeric(x["end"]) - window_large
x["end"] = as.numeric(x["end"]) + window_small
return(t(data.frame(x)))
} else {
return(t(data.frame(x)))
}
}) %>% t() %>%
as.data.frame() %>%
setNames(., colnames(gff1)) %>%
mutate(start = as.numeric(unfactor(start)),
end = as.numeric(unfactor(end))
)
gff2 = gff2 %>%
data.frame() %>%
filter(type == "CDS") %>%
select(GeneID = gene_id, Chr = seqnames, start, end, strand)
gff2_utr = apply(gff2, 1, function(x) {
if (x["strand"] == "+") {
x["start"] = as.numeric(x["end"]) - window_small
x["end"] = as.numeric(x["end"]) + window_large
return(t(data.frame(x)))
} else if (x["strand"] == "-") {
x["start"] = as.numeric(x["end"]) - window_large
x["end"] = as.numeric(x["end"]) + window_small
return(t(data.frame(x)))
} else {
return(t(data.frame(x)))
}
}) %>% t() %>%
as.data.frame() %>%
setNames(., colnames(gff1)) %>%
mutate(start = as.numeric(unfactor(start)),
end = as.numeric(unfactor(end))
)
# Loading the BAM files to construct count matrices
trimmed = paste('./align-trimmed', list.files('./align-trimmed/', pattern = "bam$"), sep = '/')
untrimmed = paste('./align-untrimmed', list.files('./align-untrimmed/', pattern = "bam$"), sep = '/')
###~~~Changing annotation to match UTRs --------------------------
annot1 = "./annot-genome/Saccharomyces_cerevisiae.R64-1-1.99.gff3"
annot2 = "./annot-genome/Saccharomyces_cerevisiae.R64-1-1.99.gtf"
### Import GFF/GTF data into GRanges object (Bioconductor class)
gff = rtracklayer::import(annot1)
gtf = rtracklayer::import(annot2)
### Transforming into dataframe (SAF format) and
### changing the start and end column to match 3'UTR
window_large = 200
window_small = 50
gff = gff %>%
data.frame() %>%
filter(type == "CDS") %>%
select(GeneID = ID, Chr = seqnames, start, end, strand) %>%
mutate(GeneID = gsub("CDS:", "", GeneID))
gff_utr = apply(gff1, 1, function(x) {
if (x["strand"] == "+") {
x["start"] = as.numeric(x["end"]) - window_small
x["end"] = as.numeric(x["end"]) + window_large
return(t(data.frame(x)))
} else if (x["strand"] == "-") {
x["start"] = as.numeric(x["end"]) - window_large
x["end"] = as.numeric(x["end"]) + window_small
return(t(data.frame(x)))
} else {
return(t(data.frame(x)))
}
}) %>% t() %>%
as.data.frame() %>%
setNames(., colnames(gff1)) %>%
mutate(start = as.numeric(unfactor(start)),
end = as.numeric(unfactor(end))
)
gtf = gtf %>%
data.frame() %>%
filter(type == "CDS") %>%
select(GeneID = gene_id, Chr = seqnames, start, end, strand)
gtf_utr = apply(gtf, 1, function(x) {
if (x["strand"] == "+") {
x["start"] = as.numeric(x["end"]) - window_small
x["end"] = as.numeric(x["end"]) + window_large
return(t(data.frame(x)))
} else if (x["strand"] == "-") {
x["start"] = as.numeric(x["end"]) - window_large
x["end"] = as.numeric(x["end"]) + window_small
return(t(data.frame(x)))
} else {
return(t(data.frame(x)))
}
}) %>% t() %>%
as.data.frame() %>%
setNames(., colnames(gff1)) %>%
mutate(start = as.numeric(unfactor(start)),
end = as.numeric(unfactor(end))
)
# sorry fot the messy use of t(), it's the only way I made it to make it work
###~~~Rsubread::featureCounts ---------------------
fc_tr_gff = Rsubread::featureCounts(trimmed,
annot.ext = gff_utr)
fc_tr_gtf = Rsubread::featureCounts(trimmed,
annot.ext = gtf_utr)
fc_utr_gff = Rsubread::featureCounts(untrimmed,
annot.ext = gff_utr)
fc_utr_gtf = Rsubread::featureCounts(untrimmed,
annot.ext = gtf_utr)
gff_utr = apply(gff1, 1, function(x) {
if (x["strand"] == "+") {
x["start"] = as.numeric(x["end"]) - window_small
x["end"] = as.numeric(x["end"]) + window_large
return(t(data.frame(x)))
} else if (x["strand"] == "-") {
x["start"] = as.numeric(x["end"]) - window_large
x["end"] = as.numeric(x["end"]) + window_small
return(t(data.frame(x)))
} else {
return(t(data.frame(x)))
}
}) %>% t() %>%
as.data.frame() %>%
setNames(., colnames(gff)) %>%
mutate(start = as.numeric(unfactor(start)),
end = as.numeric(unfactor(end))
)
gff_utr = apply(gff, 1, function(x) {
if (x["strand"] == "+") {
x["start"] = as.numeric(x["end"]) - window_small
x["end"] = as.numeric(x["end"]) + window_large
return(t(data.frame(x)))
} else if (x["strand"] == "-") {
x["start"] = as.numeric(x["end"]) - window_large
x["end"] = as.numeric(x["end"]) + window_small
return(t(data.frame(x)))
} else {
return(t(data.frame(x)))
}
}) %>% t() %>%
as.data.frame() %>%
setNames(., colnames(gff)) %>%
mutate(start = as.numeric(unfactor(start)),
end = as.numeric(unfactor(end))
)
gtf = gtf %>%
data.frame() %>%
filter(type == "CDS") %>%
select(GeneID = gene_id, Chr = seqnames, start, end, strand)
View(gtf)
gtf_utr = apply(gtf, 1, function(x) {
if (x["strand"] == "+") {
x["start"] = as.numeric(x["end"]) - window_small
x["end"] = as.numeric(x["end"]) + window_large
return(t(data.frame(x)))
} else if (x["strand"] == "-") {
x["start"] = as.numeric(x["end"]) - window_large
x["end"] = as.numeric(x["end"]) + window_small
return(t(data.frame(x)))
} else {
return(t(data.frame(x)))
}
}) %>% t() %>%
as.data.frame() %>%
setNames(., colnames(gtf)) %>%
mutate(start = as.numeric(unfactor(start)),
end = as.numeric(unfactor(end))
)
###~~~Rsubread::featureCounts ---------------------
fc_tr_gff = Rsubread::featureCounts(trimmed,
annot.ext = gff_utr)
fc_tr_gtf = Rsubread::featureCounts(trimmed,
annot.ext = gtf_utr)
fc_utr_gff = Rsubread::featureCounts(untrimmed,
annot.ext = gff_utr)
fc_utr_gtf = Rsubread::featureCounts(untrimmed,
annot.ext = gtf_utr)
View(fc_tr_gff)
View(fc_tr_gff[["counts"]])
View(fc_tr_gff[["stat"]])
View(fc_tr_gff[["stat"]])
assigned = lapply(list(fc_tr_gff, fc_tr_gtf, fc_utr_gff, fc_utr_gtf), function(x){
assignedreads = x$stat %>%
filter(Status == "Assigned") %>%
select(-Status)
return(assignedreads)
})
View(assigned)
View(assigned[[1]])
assigned = lapply(list(fc_tr_gff, fc_tr_gtf, fc_utr_gff, fc_utr_gtf), function(x){
assignedreads = x$stat %>%
filter(Status == "Assigned") %>%
select(-Status)
return(assignedreads)
}) %>% bind_rows()
View(assigned)
assigned = lapply(list(fc_tr_gff, fc_tr_gtf, fc_utr_gff, fc_utr_gtf), function(x){
assignedreads = x$stat %>%
filter(Status == "Assigned") %>%
select(-Status)
return(t(assignedreads))
}) %>% bind_rows()
assigned = lapply(list(fc_tr_gff, fc_tr_gtf, fc_utr_gff, fc_utr_gtf), function(x){
assignedreads = x$stat %>%
filter(Status == "Assigned") %>%
select(-Status)
return(t(assignedreads))
}) #%>% bind_rows()
View(assigned)
assigned[[1]]
counts = list(fc_tr_gff, fc_tr_gtf, fc_utr_gff, fc_utr_gtf)
View(counts)
counts = list("fc_tr_gff" = fc_tr_gff,
"fc_tr_gtf" = fc_tr_gtf,
"fc_utr_gff" = fc_utr_gff,
"fc_utr_gtf" = fc_utr_gtf)
assigned = lapply(counts, function(x){
assignedreads = x$stat %>%
filter(Status == "Assigned") %>%
select(-Status)
return(t(assignedreads))
}) #%>% bind_rows()
View(assigned)
assigned[["fc_tr_gff"]]
assigned[["fc_utr_gff"]]
e = bind_cols(assigned)
View(e)
assigned = lapply(counts, function(x){
assignedreads = x$stat %>%
filter(Status == "Assigned") %>%
select(-Status)
return(t(assignedreads))
}) %>% bind_cols()
rm(e)
barplot(assigned)
barplot(as.matrix(assigned))
difftrim = assigned$fc_tr_gff - assigned$fc_tr_gtf
diffuntr = assigned$fc_utr_gff - assigned$fc_utr_gtf
difftrim
diffuntr
as.matrix(assigned)
# Loading the BAM files to construct count matrices
trimmed = paste('./align-trimmed', list.files('./align-trimmed/', pattern = "bam$"), sep = '/')
untrimmed = paste('./align-untrimmed', list.files('./align-untrimmed/', pattern = "bam$"), sep = '/')
###~~~Changing annotation to match UTRs --------------------------
annot1 = "./annot-genome/Saccharomyces_cerevisiae.R64-1-1.99.gff3"
annot2 = "./annot-genome/Saccharomyces_cerevisiae.R64-1-1.99.gtf"
### Import GFF/GTF data into GRanges object (Bioconductor class)
gff = rtracklayer::import(annot1)
gtf = rtracklayer::import(annot2)
### Transforming into dataframe (SAF format) and
### changing the start and end column to match 3'UTR
window_large = 200
window_small = 50
gff = gff %>%
data.frame() %>%
filter(type == "CDS") %>% # We only map Coding DNA Sequences
select(GeneID = ID, Chr = seqnames, start, end, strand) %>%
mutate(GeneID = gsub("CDS:", "", GeneID))
gff_utr = apply(gff, 1, function(x) {
if (x["strand"] == "+") {
x["start"] = as.numeric(x["end"]) - window_small
x["end"] = as.numeric(x["end"]) + window_large
return(t(data.frame(x)))
} else if (x["strand"] == "-") {
x["start"] = as.numeric(x["end"]) - window_large
x["end"] = as.numeric(x["end"]) + window_small
return(t(data.frame(x)))
} else {
return(t(data.frame(x)))
}
}) %>% t() %>%
as.data.frame() %>%
setNames(., colnames(gff)) %>%
mutate(start = as.numeric(unfactor(start)),
end = as.numeric(unfactor(end))
)
gtf = gtf %>%
data.frame() %>%
filter(type == "CDS") %>%
select(GeneID = gene_id, Chr = seqnames, start, end, strand)
gtf_utr = apply(gtf, 1, function(x) {
if (x["strand"] == "+") {
x["start"] = as.numeric(x["end"]) - window_small
x["end"] = as.numeric(x["end"]) + window_large
return(t(data.frame(x)))
} else if (x["strand"] == "-") {
x["start"] = as.numeric(x["end"]) - window_large
x["end"] = as.numeric(x["end"]) + window_small
return(t(data.frame(x)))
} else {
return(t(data.frame(x)))
}
}) %>% t() %>%
as.data.frame() %>%
setNames(., colnames(gtf)) %>%
mutate(start = as.numeric(unfactor(start)),
end = as.numeric(unfactor(end))
)
# sorry fot the messy use of t(), it's the only way I made it to make it work
###~~~Rsubread::featureCounts ---------------------
fc_tr_gff = Rsubread::featureCounts(trimmed,
annot.ext = gff_utr)
fc_tr_gtf = Rsubread::featureCounts(trimmed,
annot.ext = gtf_utr)
fc_utr_gff = Rsubread::featureCounts(untrimmed,
annot.ext = gff_utr)
fc_utr_gtf = Rsubread::featureCounts(untrimmed,
annot.ext = gtf_utr)
counts = list("fc_tr_gff" = fc_tr_gff,
"fc_tr_gtf" = fc_tr_gtf,
"fc_utr_gff" = fc_utr_gff,
"fc_utr_gtf" = fc_utr_gtf)
assigned = lapply(counts, function(x){
assignedreads = x$stat %>%
filter(Status == "Assigned") %>%
select(-Status)
return(t(assignedreads))
}) %>% bind_cols()
barplot(as.matrix(assigned))
# The proportions seem similar. Let's inspect more cuantitavely
difftrim = assigned$fc_tr_gff - assigned$fc_tr_gtf
diffuntr = assigned$fc_utr_gff - assigned$fc_utr_gtf
"
Most of the results are positive, which means GFF maps more counts,
though the difference is at most 40, so I don't think the effect is bigger.
From now on I believe I will use the GFF annotation
"
View(fc_tr_gff)
View(fc_tr_gff[["annotation"]])
View(fc_tr_gff[["counts"]])
source('~/Documents/covid-r-plots/scripts/plots-covid-timeseries.r', echo=TRUE)
